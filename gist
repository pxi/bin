#!/bin/sh

if [ $# -lt 1 ]; then
	echo "usage: $(basename $0) [ -d DESCR ] FILE" >&2
	exit 1
fi

user=$(git config github.user)
token=$(git config github.token)
descr="something i just made up"

while [ $# -gt 1 ]; do
	opt=$1
	shift
	case $opt in
		-d)
			descr=$1
			shift
			;;
		*)
			;;
	esac
done

if [ -z "$1" -a ! -r "$1" ]; then
	echo "no such file: $1" >&2
	exit 1
fi

if [ -z "$user" -o -z "$token" ]; then
	echo "github.user and github.token must be defined" >&2
	exit 1
fi

tmp=$(mktemp /tmp/$(basename $0).XXX)
log=$(mktemp /tmp/$(basename $0).XXX)
trap 'rm $tmp $log' EXIT

# build the request body
cat <<EOF >$tmp
{
	"description": "$descr",
	"public": false,
	"files": {
		"$(basename $1)": {
			"content": "$(cat $1)"
		}
	}
}
EOF

# make the request
cat <<EOF | curl -K - https://api.github.com/gists >$log || exit $?
request = "POST"
data-binary @$tmp
# turn on silent mode
silent
# but show errors
show-error
# include header in response
include
# authentication
user "$user:$token"
EOF

# parse results
ret=$(head -n 1 $log | cut -d ' ' -f 2)
tr -d '\r' <$log | sed '1,/^$/d' | sponge $log
if [ $ret -eq 201 ]; then
	jshon -e html_url -u <$log
	ret=0
else
	cat $log >&2
fi

exit $ret
